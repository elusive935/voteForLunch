<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/resources/**" security="none"/>
    <http pattern="/webjars/**" security="none"/>

    <http pattern="/**" use-expressions="true" name="securityFilterChain" create-session="stateless">
        <http-basic/>
        <!--<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>-->
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <csrf disabled="true"/>
    </http>

    <!--<beans:bean class="ru.javawebinar.topjava.util.PasswordUtil" id="passwordEncoder" factory-method="getPasswordEncoder"/>-->

    <beans:bean class="core.util.PasswordUtil" id="passwordEncoder" factory-method="getPasswordEncoder"/>

    <authentication-manager>
        <authentication-provider user-service-ref="userService">
            <password-encoder ref="passwordEncoder"/>
        <!--<authentication-provider>-->
            <!--<password-encoder ref="passwordEncoder"/>-->

            <!--<jdbc-user-service data-source-ref="dataSource"-->
                               <!--users-by-username-query="SELECT login, password, enabled FROM users u WHERE u.login = ?"-->
                               <!--authorities-by-username-query="SELECT u.login, r.role FROM users u, user_roles r WHERE u.id = r.user_id AND u.login = ?"-->
            <!--/>-->

        </authentication-provider>
    </authentication-manager>

</beans:beans>