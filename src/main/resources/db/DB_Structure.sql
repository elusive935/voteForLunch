DROP TABLE user_roles IF EXISTS;
DROP TABLE users IF EXISTS CASCADE;
DROP TABLE restaurants IF EXISTS CASCADE;
DROP TABLE dishes IF EXISTS;
DROP TABLE votes IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE global_seq AS INTEGER START WITH 100000;

CREATE TABLE users
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255),
  login            VARCHAR(255) NOT NULL,
  password         VARCHAR(255) NOT NULL,
  enabled          BOOLEAN DEFAULT TRUE
);
CREATE UNIQUE INDEX users_unique_login_idx ON users (login);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  UNIQUE (user_id, role),
  FOREIGN KEY ( user_id ) REFERENCES users ( id ) ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name    VARCHAR(255) NOT NULL,
  UNIQUE ( name )
);

CREATE TABLE dishes
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  restaurant_id INTEGER,
  name          VARCHAR(255) NOT NULL,
  price         INTEGER,
  date          DATE NOT NULL,
  FOREIGN KEY ( restaurant_id ) REFERENCES restaurants ( id ) ON DELETE CASCADE
);

CREATE TABLE votes
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  date          DATE,
  user_id       INTEGER,
  restaurant_id INTEGER,
  UNIQUE (date, user_id),
  FOREIGN KEY ( user_id ) REFERENCES users ( id ) ON DELETE CASCADE
);






